[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "[STUDENT/GROUP NAME] Progress Journal",
    "section": "",
    "text": "This progress journal covers [STUDENT NAME SURNAME / PROJECT GROUP NAME]’s work during their term at BDA 503 Fall 2022.\nEach section is an assignment or an individual work."
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introduction",
    "section": "",
    "text": "See Knuth (1984) for additional discussion of literate programming.\n\n\n\n\nKnuth, Donald E. 1984. “Literate Programming.” Comput. J. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "2  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever."
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Knuth, Donald E. 1984. “Literate Programming.” Comput.\nJ. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "assignment1.html",
    "href": "assignment1.html",
    "title": "1  Assignment 1",
    "section": "",
    "text": "Hi, I’m Ugur Ozata. I’ve been working as Senior Data Analyst at Peak Games for 3,5 years. I’m in the data field since my third year in the university. Finding insights for real problems from the data encourages me to work in this field. Until now I showed what happended in the data, my future plan is to show what is going to happen from the data."
  },
  {
    "objectID": "assignment1.html#as",
    "href": "assignment1.html#as",
    "title": "1  Assignment 1",
    "section": "1.2 as",
    "text": "1.2 as"
  },
  {
    "objectID": "assignment1.html#websites-books-blogs-oh-my-creating-rich-content-with-quarto",
    "href": "assignment1.html#websites-books-blogs-oh-my-creating-rich-content-with-quarto",
    "title": "1  Assignment 1",
    "section": "1.2 Websites & Books & Blogs, oh my! Creating Rich Content with Quarto",
    "text": "1.2 Websites & Books & Blogs, oh my! Creating Rich Content with Quarto\nHi I chose “Websites & Books & Blogs, oh my! Creating Rich Content with Quarto” from Devin Pastoor. We’ll be using Quarto throughout the course 503 that is why i chose this to see real life example.\nHe tried bunch of things to create documentation or website such as hugodown, bookdown, blogdown and faces many troubles. In quarto, it is possible to both do documentation and create a website, beside initialize the project with one command line and support almost everything.\nWhile quarto supports markdown, it can also work without markdown. We are all used to writing with Markdown. What about when we want to add a picture? We all google. In quarto, when we drag and drop the picture, it both uploads the picture and creates a folder directory for the picture. It is just that easy to do this.\nIn addition, it is very easy to reach the main config of the project and add something new in quarto. The whole config is in _quarto.yml. When we want to add an external framework, we first need to install it into our project and import it in a way that quarto can understand.\nHe wanted to create a blog tab first. He wrote the things below into .qmd file.\n---\ntitle: “myblog”\nlisting:\ncontents: posts\nsort: “date desc”\ntype: default\ncategories: true\n` ---\nOne of the blog posts, there was a pictures which was not clickable. He thought this is not professional way then he installed lightbox library then did the same thing as he did for blog, wrote the things below then all pictures in the page was clickable! It was that easy.\n-- `\nfilters:\n- lightbox\nlightbox: auto\n--\nHe mentioned there are pretty much different templates to inspire. It can be reached from quarto.org/docs/gallery."
  },
  {
    "objectID": "assignment1.html#wonderful-speech-from-rstudio-conf.-2022",
    "href": "assignment1.html#wonderful-speech-from-rstudio-conf.-2022",
    "title": "1  Assignment 1",
    "section": "1.2 Wonderful Speech from RStudio Conf. 2022",
    "text": "1.2 Wonderful Speech from RStudio Conf. 2022\nHi I chose “Websites & Books & Blogs, oh my! Creating Rich Content with Quarto” from Devin Pastoor. We’ll be using Quarto throughout the course 503 that is why i chose this to see real life example.\nHe tried bunch of things to create documentation or website such as hugodown, bookdown, blogdown and faces many troubles. In quarto, it is possible to both do documentation and create a website, beside initialize the project with one command line and support almost everything.\nWhile quarto supports markdown, it can also work without markdown. We are all used to writing with Markdown. What about when we want to add a picture? We all google. In quarto, when we drag and drop the picture, it both uploads the picture and creates a folder directory for the picture. It is just that easy to do this.\nIn addition, it is very easy to reach the main config of the project and add something new in quarto. The whole config is in _quarto.yml. When we want to add an external framework, we first need to install it into our project and import it in a way that quarto can understand.\nHe wanted to create a blog tab first. He wrote the things below into .qmd file.\n--- \ntitle: \"myblog\"\nlisting:\ncontents: posts\nsort: \"date desc\"\ntype: default\ncategories: true\n---\nOne of the blog posts, there was a pictures which was not clickable. He thought this is not professional way then he installed lightbox library then did the same thing as he did for blog, wrote the things below then all pictures in the page was clickable! It was that easy.\n---\nfilters:\n    - lightbox\nlightbox: auto\n---\nHe mentioned there are pretty much different templates to inspire. It can be reached from quarto.org/docs/gallery."
  },
  {
    "objectID": "assignment1.html#wonderful-speech-from-rstudio-conf.-2022-1",
    "href": "assignment1.html#wonderful-speech-from-rstudio-conf.-2022-1",
    "title": "1  Assignment 1",
    "section": "1.3 Wonderful Speech from RStudio Conf. 2022",
    "text": "1.3 Wonderful Speech from RStudio Conf. 2022"
  },
  {
    "objectID": "assignment1.html#r-posts",
    "href": "assignment1.html#r-posts",
    "title": "1  Assignment 1",
    "section": "1.3 3 R Posts",
    "text": "1.3 3 R Posts\n\n1.3.1 Post 1\nasdasd\n\n\n1.3.2 Post 2\nasdasd\n\n\n1.3.3 Post 3\nasdasdas"
  },
  {
    "objectID": "assignment1.html#couple-of-interestin-r-posts",
    "href": "assignment1.html#couple-of-interestin-r-posts",
    "title": "1  Assignment 1",
    "section": "1.3 Couple of interestin R Posts",
    "text": "1.3 Couple of interestin R Posts\n\n1.3.1 Post 1\nasdasd\n\n\n1.3.2 Post 2\nasdasd\n\n\n1.3.3 Post 3\nasdasdas"
  },
  {
    "objectID": "assignment1.html#couple-of-interesting-r-posts",
    "href": "assignment1.html#couple-of-interesting-r-posts",
    "title": "1  Assignment 1",
    "section": "1.3 Couple of interesting R Posts",
    "text": "1.3 Couple of interesting R Posts\n\n1.3.1 How to read&write CSV\nData seperator define the file type such as csv(comma),tsv(tab) etc… Most of time it will be csv or tsv, so example will be around them.\nWhile the seperator changes in the file, function is same but parameter (sep) changes.\nLet’s import dataset for both.\ncsv_data <- read.csv(file='mydata.csv',sep=',')\ntsv_data <- read.csv(file='mydata.csv',sep='\\t')\nLet’s use header parameters.\nAll columns have its own name but only when it’s indicated in the dataset. If our dataset have column name, we set header parameters True, it means first row of file will be column names. Otherwise, set false.\ncsv_data <- read.csv(file='mydata.csv',sep=',',header=TRUE)\ntsv_data <- read.csv(file='mydata.csv',sep='\\t',header=TRUE)\nLet’s write our data into csv or tsv. We have row.names parameters this time. DataFrame in R have its row number, if we dont want to keep this in our file, we should set row.names=FALSE\nread.csv(file='mydata.csv',sep=',',row.names=FALSE)\nread.csv(file='mydata.csv',sep='\\t',row.names=FALSE)\nFor more details.\n\n\n1.3.2 With and Within function\n\n1.3.2.1 With Function\nThe with function makes the calculation from DataFrame.\n\nNum <- c(100,100,100,100,100)\nCost <- c(1200,1300,1400,1500,1600)\ndata_A <- data.frame(Num,Cost,stringsAsFactors = FALSE)\nprint(with(data_A, Num*Cost))\n\n[1] 120000 130000 140000 150000 160000\n\nprint(with(data_A, Num/Cost))\n\n[1] 0.08333333 0.07692308 0.07142857 0.06666667 0.06250000\n\n\n\n\n1.3.2.2 Within Function\nThe within function makes the calculation and write it into DataFrame.\n\nNum <- c(100,100,100,100,100)\nCost <- c(1200,1300,1400,1500,1600)\ndata_A <- data.frame(Num,Cost,stringsAsFactors = FALSE)\nwithin(data_A, product <- Num*Cost)\n\n  Num Cost product\n1 100 1200  120000\n2 100 1300  130000\n3 100 1400  140000\n4 100 1500  150000\n5 100 1600  160000\n\nwithin(data_A, devide <- Num/Cost)\n\n  Num Cost     devide\n1 100 1200 0.08333333\n2 100 1300 0.07692308\n3 100 1400 0.07142857\n4 100 1500 0.06666667\n5 100 1600 0.06250000\n\n\nFor more details.\n\n\n\n1.3.3 Summaris(z)e function from dplyr library\nWe find the calculation row by row above, what about making calcalation by groups? It’s the summarize and group_by function. NOTE: We’ll need dplyr library.\nLet’s find average cost for Brands.\n\nBrand <- c('Brand1','Brand1','Brand2','Brand2','Brand2')\nCost <- c(10,20,100,150,200)\ndata_A <- data.frame(Brand,Cost,stringsAsFactors = FALSE)\ndata_A %>%\n  group_by(Brand) %>%\n    summarize(mean = mean(Cost))\n\nResult will be: \n\nBrand   mean\nBrand1  15          \nBrand2  150 \n\nFor more details."
  }
]