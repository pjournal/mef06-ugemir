[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Ugur Ozata’s Progress Journal",
    "section": "",
    "text": "This progress journal covers Ugur Ozata’s work during their term at BDA 503 Fall 2022.\nEach section is an assignment or an individual work."
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introduction",
    "section": "",
    "text": "See Knuth (1984) for additional discussion of literate programming.\n\n\n\n\nKnuth, Donald E. 1984. “Literate Programming.” Comput. J. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "2  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever."
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Knuth, Donald E. 1984. “Literate Programming.” Comput.\nJ. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "assignment1.html",
    "href": "assignment1.html",
    "title": "1  Assignment 1",
    "section": "",
    "text": "Hi, I’m Ugur Ozata. I’ve been working as Senior Data Analyst at Peak Games for 3,5 years. I’m in the data field since my third year in the university. Finding insights for real problems from the data encourages me to work in this field. Until now I showed what happended in the data, my future plan is to show what is going to happen from the data."
  },
  {
    "objectID": "assignment1.html#as",
    "href": "assignment1.html#as",
    "title": "1  Assignment 1",
    "section": "1.2 as",
    "text": "1.2 as"
  },
  {
    "objectID": "assignment1.html#websites-books-blogs-oh-my-creating-rich-content-with-quarto",
    "href": "assignment1.html#websites-books-blogs-oh-my-creating-rich-content-with-quarto",
    "title": "1  Assignment 1",
    "section": "1.2 Websites & Books & Blogs, oh my! Creating Rich Content with Quarto",
    "text": "1.2 Websites & Books & Blogs, oh my! Creating Rich Content with Quarto\nHi I chose “Websites & Books & Blogs, oh my! Creating Rich Content with Quarto” from Devin Pastoor. We’ll be using Quarto throughout the course 503 that is why i chose this to see real life example.\nHe tried bunch of things to create documentation or website such as hugodown, bookdown, blogdown and faces many troubles. In quarto, it is possible to both do documentation and create a website, beside initialize the project with one command line and support almost everything.\nWhile quarto supports markdown, it can also work without markdown. We are all used to writing with Markdown. What about when we want to add a picture? We all google. In quarto, when we drag and drop the picture, it both uploads the picture and creates a folder directory for the picture. It is just that easy to do this.\nIn addition, it is very easy to reach the main config of the project and add something new in quarto. The whole config is in _quarto.yml. When we want to add an external framework, we first need to install it into our project and import it in a way that quarto can understand.\nHe wanted to create a blog tab first. He wrote the things below into .qmd file.\n---\ntitle: “myblog”\nlisting:\ncontents: posts\nsort: “date desc”\ntype: default\ncategories: true\n` ---\nOne of the blog posts, there was a pictures which was not clickable. He thought this is not professional way then he installed lightbox library then did the same thing as he did for blog, wrote the things below then all pictures in the page was clickable! It was that easy.\n-- `\nfilters:\n- lightbox\nlightbox: auto\n--\nHe mentioned there are pretty much different templates to inspire. It can be reached from quarto.org/docs/gallery."
  },
  {
    "objectID": "assignment1.html#wonderful-speech-from-rstudio-conf.-2022",
    "href": "assignment1.html#wonderful-speech-from-rstudio-conf.-2022",
    "title": "1  Assignment 1",
    "section": "1.2 Wonderful Speech from RStudio Conf. 2022",
    "text": "1.2 Wonderful Speech from RStudio Conf. 2022\nHi I chose “Websites & Books & Blogs, oh my! Creating Rich Content with Quarto” from Devin Pastoor. We’ll be using Quarto throughout the course 503 that is why i chose this to see real life example.\nHe tried bunch of things to create documentation or website such as hugodown, bookdown, blogdown and faces many troubles. In quarto, it is possible to both do documentation and create a website, beside initialize the project with one command line and support almost everything.\nWhile quarto supports markdown, it can also work without markdown. We are all used to writing with Markdown. What about when we want to add a picture? We all google. In quarto, when we drag and drop the picture, it both uploads the picture and creates a folder directory for the picture. It is just that easy to do this.\nIn addition, it is very easy to reach the main config of the project and add something new in quarto. The whole config is in _quarto.yml. When we want to add an external framework, we first need to install it into our project and import it in a way that quarto can understand.\nHe wanted to create a blog tab first. He wrote the things below into .qmd file.\n--- \ntitle: \"myblog\"\nlisting:\ncontents: posts\nsort: \"date desc\"\ntype: default\ncategories: true\n---\nOne of the blog posts, there was a pictures which was not clickable. He thought this is not professional way then he installed lightbox library then did the same thing as he did for blog, wrote the things below then all pictures in the page was clickable! It was that easy.\n---\nfilters:\n    - lightbox\nlightbox: auto\n---\nHe mentioned there are pretty much different templates to inspire. It can be reached from quarto.org/docs/gallery."
  },
  {
    "objectID": "assignment1.html#wonderful-speech-from-rstudio-conf.-2022-1",
    "href": "assignment1.html#wonderful-speech-from-rstudio-conf.-2022-1",
    "title": "1  Assignment 1",
    "section": "1.3 Wonderful Speech from RStudio Conf. 2022",
    "text": "1.3 Wonderful Speech from RStudio Conf. 2022"
  },
  {
    "objectID": "assignment1.html#r-posts",
    "href": "assignment1.html#r-posts",
    "title": "1  Assignment 1",
    "section": "1.3 3 R Posts",
    "text": "1.3 3 R Posts\n\n1.3.1 Post 1\nasdasd\n\n\n1.3.2 Post 2\nasdasd\n\n\n1.3.3 Post 3\nasdasdas"
  },
  {
    "objectID": "assignment1.html#couple-of-interestin-r-posts",
    "href": "assignment1.html#couple-of-interestin-r-posts",
    "title": "1  Assignment 1",
    "section": "1.3 Couple of interestin R Posts",
    "text": "1.3 Couple of interestin R Posts\n\n1.3.1 Post 1\nasdasd\n\n\n1.3.2 Post 2\nasdasd\n\n\n1.3.3 Post 3\nasdasdas"
  },
  {
    "objectID": "assignment1.html#couple-of-interesting-r-posts",
    "href": "assignment1.html#couple-of-interesting-r-posts",
    "title": "1  Assignment 1",
    "section": "1.3 Couple of interesting R Posts",
    "text": "1.3 Couple of interesting R Posts\n\n1.3.1 How to read&write CSV\nData seperator define the file type such as csv(comma),tsv(tab) etc… Most of time it will be csv or tsv, so example will be around them.\nWhile the seperator changes in the file, function is same but parameter (sep) changes.\nLet’s import dataset for both.\ncsv_data <- read.csv(file='mydata.csv',sep=',')\ntsv_data <- read.csv(file='mydata.csv',sep='\\t')\nLet’s use header parameters.\nAll columns have its own name but only when it’s indicated in the dataset. If our dataset have column name, we set header parameters True, it means first row of file will be column names. Otherwise, set false.\ncsv_data <- read.csv(file='mydata.csv',sep=',',header=TRUE)\ntsv_data <- read.csv(file='mydata.csv',sep='\\t',header=TRUE)\nLet’s write our data into csv or tsv. We have row.names parameters this time. DataFrame in R have its row number, if we dont want to keep this in our file, we should set row.names=FALSE\nread.csv(file='mydata.csv',sep=',',row.names=FALSE)\nread.csv(file='mydata.csv',sep='\\t',row.names=FALSE)\nFor more details.\n\n\n1.3.2 With and Within function\n\n1.3.2.1 With Function\nThe with function makes the calculation from DataFrame.\n\nNum <- c(100,100,100,100,100)\nCost <- c(1200,1300,1400,1500,1600)\ndata_A <- data.frame(Num,Cost,stringsAsFactors = FALSE)\nprint(with(data_A, Num*Cost))\n\n[1] 120000 130000 140000 150000 160000\n\nprint(with(data_A, Num/Cost))\n\n[1] 0.08333333 0.07692308 0.07142857 0.06666667 0.06250000\n\n\n\n\n1.3.2.2 Within Function\nThe within function makes the calculation and write it into DataFrame.\n\nNum <- c(100,100,100,100,100)\nCost <- c(1200,1300,1400,1500,1600)\ndata_A <- data.frame(Num,Cost,stringsAsFactors = FALSE)\nwithin(data_A, product <- Num*Cost)\n\n  Num Cost product\n1 100 1200  120000\n2 100 1300  130000\n3 100 1400  140000\n4 100 1500  150000\n5 100 1600  160000\n\nwithin(data_A, devide <- Num/Cost)\n\n  Num Cost     devide\n1 100 1200 0.08333333\n2 100 1300 0.07692308\n3 100 1400 0.07142857\n4 100 1500 0.06666667\n5 100 1600 0.06250000\n\n\nFor more details.\n\n\n\n1.3.3 Summaris(z)e function from dplyr library\nWe find the calculation row by row above, what about making calcalation by groups? It’s the summarize and group_by function. NOTE: We’ll need dplyr library.\nLet’s find average cost for Brands.\n\nBrand <- c('Brand1','Brand1','Brand2','Brand2','Brand2')\nCost <- c(10,20,100,150,200)\ndata_A <- data.frame(Brand,Cost,stringsAsFactors = FALSE)\ndata_A %>%\n  group_by(Brand) %>%\n    summarize(mean = mean(Cost))\n\nResult will be: \n\nBrand   mean\nBrand1  15          \nBrand2  150 \n\nFor more details."
  },
  {
    "objectID": "inclass1.html",
    "href": "inclass1.html",
    "title": "2  inclass1",
    "section": "",
    "text": "2.0.1 Let’s look at the description of the dataset.\nThis package contains information about all flights that departed from NYC (e.g. EWR, JFK and LGA) to destinations in the United States, Puerto Rico,and the American Virgin Islands) in 2013: 336,776 flights in total.\n\n\n2.0.2 AIRBUS and AIRBUS INDUSTRIE\nThere are AIRBUS and AIRBUS INDUSTRIE in the data, with quick google search there is no difference between them. it was AIRBUS INDUSTRIE until 2001, since then it’s just AIRBUS. That’s why let’s make them same.\n\nplanes %>%\n  group_by(manufacturer) %>%\n  summarise(plane_count=n()) %>%\n  arrange(desc(plane_count)) %>%\n  print(n = Inf)\n\n# A tibble: 35 × 2\n   manufacturer                  plane_count\n   <chr>                               <int>\n 1 BOEING                               1630\n 2 AIRBUS INDUSTRIE                      400\n 3 BOMBARDIER INC                        368\n 4 AIRBUS                                336\n 5 EMBRAER                               299\n 6 MCDONNELL DOUGLAS                     120\n 7 MCDONNELL DOUGLAS AIRCRAFT CO         103\n 8 MCDONNELL DOUGLAS CORPORATION          14\n 9 CANADAIR                                9\n10 CESSNA                                  9\n11 PIPER                                   5\n12 AMERICAN AIRCRAFT INC                   2\n13 BEECH                                   2\n14 BELL                                    2\n15 GULFSTREAM AEROSPACE                    2\n16 STEWART MACO                            2\n17 AGUSTA SPA                              1\n18 AVIAT AIRCRAFT INC                      1\n19 AVIONS MARCEL DASSAULT                  1\n20 BARKER JACK L                           1\n21 CANADAIR LTD                            1\n22 CIRRUS DESIGN CORP                      1\n23 DEHAVILLAND                             1\n24 DOUGLAS                                 1\n25 FRIEDEMANN JON                          1\n26 HURLEY JAMES LARRY                      1\n27 JOHN G HESS                             1\n28 KILDALL GARY                            1\n29 LAMBERT RICHARD                         1\n30 LEARJET INC                             1\n31 LEBLANC GLENN T                         1\n32 MARZ BARRY                              1\n33 PAIR MIKE E                             1\n34 ROBINSON HELICOPTER CO                  1\n35 SIKORSKY                                1\n\nplanes_new <- planes %>% mutate(manufacturer = replace(manufacturer, manufacturer == \"AIRBUS INDUSTRIE\", \"AIRBUS\"))\n\n\n\n2.0.3 80/20 Rules\nThere are 34 different manufacturers, first 4 manufacturer dominated the market and 91.4% of planes belongs to them. Not exactly but 80/20 rules somehow works here 11% of the manufacturer dominates the 91.4% of the market.\n\nplanes_new %>%\n  group_by(manufacturer) %>%\n  summarise(avg_engine=mean(engines),median_engine=median(engines),plane_count=n()) %>%\n  arrange(desc(plane_count)) %>%\n  mutate(frequency = round(plane_count/sum(plane_count),3), cumsum = cumsum(frequency)) %>%\n  print(n = Inf)\n\n# A tibble: 34 × 6\n   manufacturer                  avg_engine median_engine plane…¹ frequ…² cumsum\n   <chr>                              <dbl>         <dbl>   <int>   <dbl>  <dbl>\n 1 BOEING                              2.00           2      1630   0.491  0.491\n 2 AIRBUS                              2.01           2       736   0.222  0.713\n 3 BOMBARDIER INC                      2              2       368   0.111  0.824\n 4 EMBRAER                             2              2       299   0.09   0.914\n 5 MCDONNELL DOUGLAS                   2              2       120   0.036  0.95 \n 6 MCDONNELL DOUGLAS AIRCRAFT CO       2              2       103   0.031  0.981\n 7 MCDONNELL DOUGLAS CORPORATION       2              2        14   0.004  0.985\n 8 CANADAIR                            2              2         9   0.003  0.988\n 9 CESSNA                              1.33           1         9   0.003  0.991\n10 PIPER                               1.4            1         5   0.002  0.993\n11 AMERICAN AIRCRAFT INC               1              1         2   0.001  0.994\n12 BEECH                               2              2         2   0.001  0.995\n13 BELL                                1.5            1.5       2   0.001  0.996\n14 GULFSTREAM AEROSPACE                2              2         2   0.001  0.997\n15 STEWART MACO                        1              1         2   0.001  0.998\n16 AGUSTA SPA                          2              2         1   0      0.998\n17 AVIAT AIRCRAFT INC                  1              1         1   0      0.998\n18 AVIONS MARCEL DASSAULT              3              3         1   0      0.998\n19 BARKER JACK L                       1              1         1   0      0.998\n20 CANADAIR LTD                        4              4         1   0      0.998\n21 CIRRUS DESIGN CORP                  1              1         1   0      0.998\n22 DEHAVILLAND                         1              1         1   0      0.998\n23 DOUGLAS                             4              4         1   0      0.998\n24 FRIEDEMANN JON                      1              1         1   0      0.998\n25 HURLEY JAMES LARRY                  1              1         1   0      0.998\n26 JOHN G HESS                         1              1         1   0      0.998\n27 KILDALL GARY                        1              1         1   0      0.998\n28 LAMBERT RICHARD                     1              1         1   0      0.998\n29 LEARJET INC                         2              2         1   0      0.998\n30 LEBLANC GLENN T                     1              1         1   0      0.998\n31 MARZ BARRY                          1              1         1   0      0.998\n32 PAIR MIKE E                         1              1         1   0      0.998\n33 ROBINSON HELICOPTER CO              1              1         1   0      0.998\n34 SIKORSKY                            2              2         1   0      0.998\n# … with abbreviated variable names ¹​plane_count, ²​frequency\n\n\n\n\n2.0.4 Manufacturer by engine counts\nMost of planes have 2 engines and rest of them have 1,3,4 engines. 2 engines have different avg seat, for example BOEING has 187 seat, BOMBARDIER INC has 74 in average. The reason could be pricing and luxury. While BOMBARDIER offering more private experience, BOEIGN offering more seats. 3 and 4 engines might be for long flight. They also differs in terms of available seats. 4 engines CANADAIR LTD has only 2 seats, but BOEING have 450 seats.\n\nplanes_new %>%\n  group_by(engines,manufacturer) %>%\n  summarise(plane_count=n(),avg_seats=mean(seats),,median_seats=median(seats)) %>%\n  arrange(engines,desc(plane_count)) %>%\n  print(n = Inf)\n\n`summarise()` has grouped output by 'engines'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 40 × 5\n# Groups:   engines [4]\n   engines manufacturer                  plane_count avg_seats median_seats\n     <int> <chr>                               <int>     <dbl>        <dbl>\n 1       1 CESSNA                                  6      4.33          4  \n 2       1 PIPER                                   3      6             7  \n 3       1 AMERICAN AIRCRAFT INC                   2      2             2  \n 4       1 STEWART MACO                            2      2             2  \n 5       1 AVIAT AIRCRAFT INC                      1      2             2  \n 6       1 BARKER JACK L                           1      2             2  \n 7       1 BELL                                    1      5             5  \n 8       1 CIRRUS DESIGN CORP                      1      4             4  \n 9       1 DEHAVILLAND                             1     16            16  \n10       1 FRIEDEMANN JON                          1      2             2  \n11       1 HURLEY JAMES LARRY                      1      2             2  \n12       1 JOHN G HESS                             1      2             2  \n13       1 KILDALL GARY                            1      2             2  \n14       1 LAMBERT RICHARD                         1      2             2  \n15       1 LEBLANC GLENN T                         1      2             2  \n16       1 MARZ BARRY                              1      2             2  \n17       1 PAIR MIKE E                             1      2             2  \n18       1 ROBINSON HELICOPTER CO                  1      5             5  \n19       2 BOEING                               1629    175.          149  \n20       2 AIRBUS                                733    202.          182  \n21       2 BOMBARDIER INC                        368     74.0          80  \n22       2 EMBRAER                               299     45.6          55  \n23       2 MCDONNELL DOUGLAS                     120    162.          172  \n24       2 MCDONNELL DOUGLAS AIRCRAFT CO         103    142           142  \n25       2 MCDONNELL DOUGLAS CORPORATION          14    142           142  \n26       2 CANADAIR                                9     55            55  \n27       2 CESSNA                                  3      7.33          8  \n28       2 BEECH                                   2      9.5           9.5\n29       2 GULFSTREAM AEROSPACE                    2     22            22  \n30       2 PIPER                                   2      8             8  \n31       2 AGUSTA SPA                              1      8             8  \n32       2 BELL                                    1     11            11  \n33       2 LEARJET INC                             1     11            11  \n34       2 SIKORSKY                                1     14            14  \n35       3 AIRBUS                                  2    379           379  \n36       3 AVIONS MARCEL DASSAULT                  1     12            12  \n37       4 AIRBUS                                  1    375           375  \n38       4 BOEING                                  1    450           450  \n39       4 CANADAIR LTD                            1      2             2  \n40       4 DOUGLAS                                 1    102           102  \n\n\n\n\n2.0.5 Leaders of Market\nWe know that most of plane have 2 engines and they are belongs to 4 manufacturer. Let’s investigate metrics. of only 2 engines comes from 4 manufacturer.\n\nmanufacturers_names <- planes_new %>%\n  group_by(manufacturer) %>%\n  summarise(avg_engine=mean(engines),median_engine=median(engines),plane_count=n()) %>%\n  arrange(desc(plane_count)) %>%\n  mutate(frequency = round(plane_count/sum(plane_count),3), cumsum = cumsum(frequency)) %>%\n  select(manufacturer) %>%\n  slice_head(n = 4)\n\nAIRBUS and BOEING look like two compaines have same strategy which is more seats. BOEING have more different planes than AIRBUS. BOMBARDIER and EMBRAER also have same strategy which is less seats.\n\nplanes_new %>%\n  filter(manufacturer %in% manufacturers_names$manufacturer,engines == 2) %>%\n  group_by(manufacturer) %>%\n  summarise(mean=mean(seats),std_dev=sd(seats),count=n()) %>%\n  print(n = Inf)\n\n# A tibble: 4 × 4\n  manufacturer    mean std_dev count\n  <chr>          <dbl>   <dbl> <int>\n1 AIRBUS         202.     59.2   733\n2 BOEING         175.     59.1  1629\n3 BOMBARDIER INC  74.0    17.8   368\n4 EMBRAER         45.6    15.5   299"
  },
  {
    "objectID": "deneme1.html",
    "href": "deneme1.html",
    "title": "3  Untitled",
    "section": "",
    "text": "Deneme 1"
  },
  {
    "objectID": "shiny_app.html",
    "href": "shiny_app.html",
    "title": "3  shiny app",
    "section": "",
    "text": "Shiny App can be reached from this link."
  }
]